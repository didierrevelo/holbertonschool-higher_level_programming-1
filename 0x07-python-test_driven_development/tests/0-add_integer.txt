The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------
Checking docstring for module:
        >>> __import__('0-add_integer').__doc__ != None
        True

Import ``add_integer`` from the ``0-add_integer`` module:
        >>> add_integer = __import__('0-add_integer').add_integer

Check docstring for function:
        >>> len(add_integer.__doc__) > 0
        True

add two number integer
        >>> add_integer(10, 12)
        22

add two number integer
        >>> add_integer(14, 22)
        36

add two number integer
        >>> add_integer(1547, 552)
        2099

add two number integer negative
        >>> add_integer(-1552, 547)
        -1005

add two number integer
        >>> add_integer(1547, 552)
        2099

add two number integer
        >>> add_integer(1547, -824)
        723

Adding a string with int:
        >>> add_integer("B", 2)
        Traceback (most recent call last):
                ...
        TypeError: a must be an integer

Adding a int with string:
        >>> add_integer(2, "a")
        Traceback (most recent call last):
                ...
        TypeError: b must be an integer

        Adding with inf:
        >>> add_integer(float('inf'), 2)
        Traceback (most recent call last):
                ...
        OverflowError: cannot convert float infinity to integer

Call empty function:
        >>> add_integer()
        Traceback (most recent call last):
                ...
        TypeError: add_integer() missing 1 required positional argument: 'a'

Call function with more than 2 arguments:
        >>> add_integer(1, 2, 3)
        Traceback (most recent call last):
                ...
        TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Call function with only 1 argument:
        >>> add_integer(1)
        99

add two number integer
        >>> add_integer(1547, 8    -24 + 52)
        1583
